'''
1은 한쪽방향만
2와 3은 두 방향
2는 서로 반대방향
3은 직각
4는 세 방향
5는 네 방향

cctv는 벽을 통과할 수 없다.
감시할 수 없는 영역은 사각지대

회전시킬수도 있다. 회전은 90도만
6은 벽

cctv끼리는 통과 가능

방향을 적절히 정해서 사각지대의 최소 크기를 구하라
'''

# N,M <= 8
# cctv의 갯수는 8개를 넘지 않는다.

# 그렇다면 모든 경우의 수를 따질 때, 4** 8 == 66000
# 그렇게 많은 수가 아님 * 64를 해도 420만정도. 완탐 가능
dir = {"l":(-1,0),"r":(1,0),"u":(0,1),"d":(0,-1)}
cctv = {1 : [[(0,1)],[(1,0)],[(0,-1)],[(-1,0)]],2:[[(-1,0),(1,0)],[(0,-1),(0,1)]],3:[[(0,1),(-1,0)],[(-1,0),(0,-1)],[(0,-1),(1,0)],[(1,0),(0,1)]],\
    4:[[(1,0),(-1,0),(0,-1)],[(-1,0),(0,-1),(1,0)],[(0,-1),(1,0),(0,1)],[(1,0),(0,1),(-1,0)]],5:[[(1,0),(-1,0),(0,1),(0,-1)]]}

def updater(x,y,dirs):# 모든 방향으로 움직이면서 #으로 변경
    for dir in dirs:
        for _nx,_ny in dir:
            nx = x+ _nx
            ny = y+ _ny
            while 0<=nx<N and 0<=ny<M:
                if graph[nx][ny] == 6:
                    break
                elif graph[nx][ny] == 0:
                    graph[nx][ny] = "#"
                else: # 다른 숫자를 만났을 때
                    pass
                nx += _nx
                ny += _ny
N,M = map(int,input().split())

graph = [list(map(int,input().split()))for _ in range(N)]

for x in range(N):
    for y in range(M):
        if graph[x][y] in [1,2,3,4,5]:
            updater(x,y,cctv[graph[x][y]])
print(graph)